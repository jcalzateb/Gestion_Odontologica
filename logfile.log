[2024-08-08 23:06:53] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:48)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:06:53] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:48)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:11:58] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:46)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:11:58] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:46)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:31:55] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:46)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:31:55] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:315)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:46)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:34:41] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:34:41] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:36:54] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:36:54] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:38:19] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:38:19] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:46:53] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:46:53] [ ERROR] [OdontologoDaoH2:59] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:51:24] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:51:31] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:51:31] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:52:07] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-08 23:52:07] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-09 00:03:10] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.listarTodosLosOdontologos(OdontologoDaoH2Test.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-09 00:03:10] [ ERROR] [OdontologoDaoH2:61] Error al listar odontólogos
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM odontologos [42104-230]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7931)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7915)
	at org.h2.command.Parser.readTableOrView(Parser.java:7894)
	at org.h2.command.Parser.readTablePrimary(Parser.java:1768)
	at org.h2.command.Parser.readTableReference(Parser.java:2248)
	at org.h2.command.Parser.parseSelectFromPart(Parser.java:2701)
	at org.h2.command.Parser.parseSelect(Parser.java:2809)
	at org.h2.command.Parser.parseQueryPrimary(Parser.java:2691)
	at org.h2.command.Parser.parseQueryTerm(Parser.java:2546)
	at org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2525)
	at org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2518)
	at org.h2.command.Parser.parseQueryExpression(Parser.java:2511)
	at org.h2.command.Parser.parseQuery(Parser.java:2478)
	at org.h2.command.Parser.parsePrepared(Parser.java:609)
	at org.h2.command.Parser.parse(Parser.java:580)
	at org.h2.command.Parser.parse(Parser.java:555)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:644)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:560)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:94)
	at com.backend.repository.impl.OdontologoDaoH2.listarTodos(OdontologoDaoH2.java:47)
	at com.backend.test.dao.OdontologoDaoH2Test.mostrarLoGuardado(OdontologoDaoH2Test.java:28)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
[2024-08-09 00:21:20] [ ERROR] [OdontologoDaoH2:79] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM ODONTOLOGOS [42104-230]
[2024-08-09 00:21:20] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 00:21:20] [ ERROR] [OdontologoDaoH2:79] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM ODONTOLOGOS [42104-230]
[2024-08-09 00:21:20] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 00:27:36] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:27:36] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:27:36] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:29:29] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:29:30] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:29:30] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:29:30] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:29:30] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:29:30] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:29:30] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:29:30] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:29:30] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:29:30] [ ERROR] [OdontologoDaoH2:79] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM ODONTOLOGOS [42104-230]
[2024-08-09 00:29:30] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 00:33:19] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:33:19] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:33:19] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:33:19] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:33:19] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:33:19] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:33:19] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:33:19] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:33:19] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:33:19] [ ERROR] [OdontologoDaoH2:79] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM ODONTOLOGOS [42104-230]
[2024-08-09 00:33:19] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 00:34:30] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:34:30] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:34:30] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:37:48] [ ERROR] [OdontologoDaoH2:79] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM ODONTOLOGOS [42104-230]
[2024-08-09 00:37:48] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 00:37:48] [ ERROR] [OdontologoDaoH2:79] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
SELECT * FROM ODONTOLOGOS [42104-230]
[2024-08-09 00:37:48] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 00:42:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:42:18] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:42:18] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:45:29] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:45:29] [ ERROR] [OdontologoDaoH2:38] Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:45:29] [ ERROR] [OdontologoDaoH2:43] Tuvimos un problema. Table "ODONTOLOGOS" not found (this database is empty); SQL statement:
INSERT INTO ODONTOLOGOS (MATRICULA, NOMBRE, APELLIDO) VALUES ( ?, ?, ?) [42104-230]
[2024-08-09 00:46:36] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:46:36] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:46:46] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:46:46] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:46:46] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:46:46] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:47:52] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:47:52] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:47:52] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:47:52] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:07] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:07] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:07] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:07] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:29] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:29] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:30] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:48:30] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:49:12] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:49:12] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:49:12] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:49:12] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:50:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 00:50:52] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 00:50:52] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:50:52] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:52:10] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:52:11] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:52:25] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:52:25] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:52:32] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:52:32] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:54:45] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 00:54:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 1numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:54:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 2numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:54:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 3numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 00:54:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 4numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:55:02] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 00:55:12] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 00:55:51] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:55:51] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:55:51] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 00:55:51] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:56:00] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 00:56:42] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 00:56:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:56:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:56:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 00:56:53] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:57:15] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:57:16] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:57:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:57:16] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:57:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 00:57:16] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 00:57:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:57:16] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:57:24] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:57:24] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:57:36] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:57:36] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 00:57:56] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 00:58:38] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 01:02:28] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 01:03:50] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 01:04:12] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:04:12] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:04:12] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:04:12] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:04:17] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: []
[2024-08-09 01:05:14] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:05:14] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:05:14] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:05:14] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:05:14] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 01:06:36] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:06:36] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:06:36] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:06:36] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:06:36] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 01:07:31] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:07:31] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:07:31] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:07:31] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 01:08:26] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:08:26] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:08:26] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:08:26] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 01:08:38] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:08:38] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:08:38] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:08:38] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 01:08:54] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:08:54] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:08:54] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:08:54] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 01:09:48] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:09:48] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:09:48] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:09:48] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:09:48] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 01:10:01] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:10:01] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:10:01] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:10:01] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:10:01] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 01:10:28] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:10:28] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:10:29] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:10:29] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:10:29] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:10:29] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:10:29] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 01:10:29] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:10:48] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:10:49] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:10:49] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:10:57] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:10:57] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:10:57] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:10:57] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:10:57] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 01:24:06] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 01:24:06] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 01:24:06] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 01:24:06] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 01:24:06] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 14:46:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:47:17] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:47:17] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:47:36] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:47:36] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:04] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 14:55:35] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 14:55:36] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:37] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 14:55:37] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:55:37] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:37] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 14:55:59] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 14:55:59] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:56:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 14:56:00] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:56:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 14:56:00] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 14:56:00] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 14:56:00] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:15:37] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:15:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:15:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:15:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:15:39] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:40] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:15:40] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:40] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:15:40] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:15:40] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 50numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 51numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 52numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:15:40] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 50numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 51numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 52numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:17:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:17:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:17:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:17:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:17:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:17:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:17:07] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 50numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 51numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 52numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 53numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 54numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 55numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:17:08] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 7numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 11numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 19numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 20numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 21numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 30numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 31numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 32numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 33numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 34numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 35numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 36numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 37numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 40numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 41numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 42numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 43numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 44numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 50numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 51numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 52numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 53numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 54numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 55numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:42:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=123456, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:42:46] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=123456, nombre='Manuel', apellido='Salas'}]
[2024-08-09 15:42:58] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:42:58] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:59] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:42:59] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:59] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:42:59] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:42:59] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 11numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 13numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:42:59] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=123456, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 11numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 12numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 13numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:48:15] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 15:48:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 15:48:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:79] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 15:48:16] [ ERROR] [OdontologoDaoH2:86] Ha ocurrido un error al intentar cerrar la bdd. Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 15:48:16] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 15:51:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:51:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:51:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:51:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:51:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:51:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:51:45] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:51:46] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:52:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:52:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:52:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:52:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:52:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:52:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:52:07] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:52:07] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:57:44] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:57:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:57:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:57:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:57:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:57:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:57:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:57:45] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:02] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:58:02] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:03] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:58:03] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:03] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:58:03] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:03] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:03] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:09] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:58:10] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:58:10] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:58:10] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:10] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:10] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:24] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:58:25] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:25] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:58:25] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:25] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:58:25] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:25] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:25] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:32] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:58:32] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:32] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:58:32] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:33] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:58:33] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:33] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:33] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:39] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:58:39] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:39] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:58:39] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:39] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 15:58:39] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:58:39] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:58:40] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 15:59:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:59:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:59:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:59:07] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:07] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:59:07] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:59:15] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:59:16] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:59:16] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:59:16] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:16] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 32numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 33numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:59:17] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 32numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 33numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:59:24] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:59:25] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:25] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:59:25] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:25] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:59:25] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:25] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 32numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 33numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 34numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 35numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 36numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:59:26] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 32numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 33numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 34numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 35numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 36numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:59:32] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 15:59:33] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:33] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 15:59:33] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:33] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 15:59:33] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 15:59:33] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 32numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 33numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 34numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 35numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 36numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 37numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 15:59:34] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 25numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 26numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 27numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 28numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 32numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 33numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 34numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 35numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 36numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 37numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 38numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 39numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 40numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 41numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 42numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:03:46] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 40numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 41numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 42numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 40numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 41numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 42numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 43numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 44numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 45numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:04:04] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 40numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 41numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 42numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 43numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 44numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 45numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:05:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:05:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:05:22] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:05:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:05:22] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:05:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:05:22] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:05:22] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:05:34] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:07:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:07:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:07:22] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:07:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:07:22] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:07:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:07:22] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:07:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:07:33] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:07:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:07:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:07:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:07:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:07:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:07:34] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:07:34] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:08:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:08:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:08:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:79] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:08:35] [ ERROR] [OdontologoDaoH2:86] Ha ocurrido un error al intentar cerrar la bdd. Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:08:35] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:09:14] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:09:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:09:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:22] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:09:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:22] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:09:22] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:22] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:09:22] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:09:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:09:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:09:34] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:09:35] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:09:35] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:09:35] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 9numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 10numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 11numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 12numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 24numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:18:48] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:18:49] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:19:08] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:19:20] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:19:21] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:19:21] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:19:21] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:21] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:19:21] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:19:28] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:19:28] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:28] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:19:28] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:28] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:19:28] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:19:28] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:19:29] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 14numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 15numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 16numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 17numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 18numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:20:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:20:10] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:20:10] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:20:10] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:10] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 19numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 20numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 21numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:20:11] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:54] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:20:55] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:55] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:20:55] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:55] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:20:55] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:20:55] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:20:55] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 26numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 27numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 28numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 29numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 30numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 31numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:21:38] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 36numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 37numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 38numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:22:20] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 36numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 37numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 38numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:22:47] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:22:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:22:48] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:79] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:22:48] [ ERROR] [OdontologoDaoH2:86] Ha ocurrido un error al intentar cerrar la bdd. Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:22:48] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 36numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 37numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 38numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 39numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 40numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 41numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:22:54] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 36numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 37numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 38numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 39numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 40numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 41numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 42numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 43numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 44numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 42numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 43numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 44numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:23:42] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:23:58] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:23:58] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:23:58] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:23:58] [ INFO ] [OdontologoDaoMemoria:19] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:23:58] [ INFO ] [OdontologoDaoMemoria:25] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 16:24:04] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:24:05] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:24:05] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:24:05] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:24:05] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:24:05] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:24:05] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 42numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 43numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 44numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 50numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 51numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:24:05] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 42numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 43numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 44numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 50numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 51numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:24:37] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:24:37] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:24:37] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:24:37] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:24:37] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:24:37] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:24:38] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 42numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 43numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 44numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 50numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 51numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 52numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 53numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 54numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:24:38] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 42numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 43numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 44numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 45numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 46numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 47numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 48numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 49numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 50numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 51numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 52numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 53numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 54numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:27:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:27:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:27:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:38] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:54] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:79] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:27:00] [ ERROR] [OdontologoDaoH2:86] Ha ocurrido un error al intentar cerrar la bdd. Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:27:00] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: []
[2024-08-09 16:27:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:27:17] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:27:18] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:27:18] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:27:18] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:27:18] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:27:18] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:27:18] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:27:59] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:28:00] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:28:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:28:00] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:28:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:28:00] [ INFO ] [OdontologoDaoH2:35] Odontólogo guardado: null
[2024-08-09 16:28:00] [ INFO ] [OdontologoDaoH2:77] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:28:00] [ INFO ] [OdontologoDaoH2:90] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 6numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:43:10] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:10] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:43:10] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:10] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:10] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:43:10] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:10] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:11] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:43:11] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:43:26] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:43:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:47] La matrícula ya está registrada.
[2024-08-09 16:43:27] [ ERROR] [OdontologoDaoH2:52] Tuvimos un problema. La matrícula ya está registrada.
[2024-08-09 16:55:13] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:55:13] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada. Se omite la inserción.
[2024-08-09 16:55:13] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:55:13] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada. Se omite la inserción.
[2024-08-09 16:55:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:55:14] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada. Se omite la inserción.
[2024-08-09 16:55:14] [ INFO ] [OdontologoDaoH2:87] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 16:55:14] [ INFO ] [OdontologoDaoH2:100] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 16:55:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:55:14] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada. Se omite la inserción.
[2024-08-09 16:55:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:55:14] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada. Se omite la inserción.
[2024-08-09 16:55:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:55:14] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada. Se omite la inserción.
[2024-08-09 16:55:14] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:55:14] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada. Se omite la inserción.
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:47] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:63] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:47] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:63] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:47] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:63] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:88] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:95] Ha ocurrido un error al intentar cerrar la bdd. Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: []
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:47] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:63] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:47] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:63] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:47] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:63] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:56:51] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:47] La base de datos puede que ya esté siendo utilizada: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Soluciones Posibles: cierre todas las otras conexiones; use el modo server
Database may be already in use: "C:/Users/alzat/ALZATE_JUAN-RIOFRIO_LUIS.mv.db". Possible solutions: close all other connection(s); use the server mode [90020-230]
[2024-08-09 16:56:51] [ ERROR] [OdontologoDaoH2:63] No se pudo cerrar la conexion: Cannot invoke "java.sql.Connection.close()" because "connection" is null
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:57:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:57:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:57:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:57:06] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:57:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:57:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:57:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:57:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:15] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:57:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:16] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:57:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:16] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:57:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:16] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:16] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 14numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 15numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 16numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 14numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 15numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 16numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:57:17] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:57:17] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:57:17] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:57:17] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:17] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:25] [ INFO ] [OdontologoDaoMemoria:24] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:57:25] [ INFO ] [OdontologoDaoMemoria:24] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:57:25] [ INFO ] [OdontologoDaoMemoria:24] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 16:57:25] [ INFO ] [OdontologoDaoMemoria:24] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:57:25] [ INFO ] [OdontologoDaoMemoria:30] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 16:57:32] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 16:57:33] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:33] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 16:57:33] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:33] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:33] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 16:57:33] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 16:57:33] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 16:57:33] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 14numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 15numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 16numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 17numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 18numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 19numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 20numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 21numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 16:57:33] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 8numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 9numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 10numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 11numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 12numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 13numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 14numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 15numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 16numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 17numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 18numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 19numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 20numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 21numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 22numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 23numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:45] Odontólogo guardado: null
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:45] Odontólogo guardado: null
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:45] Odontólogo guardado: null
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:87] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:100] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:02:27] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:02:27] [ ERROR] [OdontologoDaoH2:48] El numero de matrícula ya está registrada.
[2024-08-09 17:02:27] [ ERROR] [OdontologoDaoH2:53] Tuvimos un problema. El numero de matrícula ya está registrada.
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:02:27] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:02:27] [ ERROR] [OdontologoDaoH2:48] El numero de matrícula ya está registrada.
[2024-08-09 17:02:27] [ ERROR] [OdontologoDaoH2:53] Tuvimos un problema. El numero de matrícula ya está registrada.
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:02:27] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:02:27] [ ERROR] [OdontologoDaoH2:48] El numero de matrícula ya está registrada.
[2024-08-09 17:02:27] [ ERROR] [OdontologoDaoH2:53] Tuvimos un problema. El numero de matrícula ya está registrada.
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:02:27] [ INFO ] [OdontologoDaoH2:45] Odontólogo guardado: null
[2024-08-09 17:09:42] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:09:43] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:09:43] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:09:43] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:87] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:100] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:09:43] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:09:43] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:09:43] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:09:43] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:09:43] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:05] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:13:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:13:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:13:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:93] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:106] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:13:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:13:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:13:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:13:06] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:13:06] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:16:24] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:16:24] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:16:24] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ INFO ] [OdontologoDaoH2:93] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:16:24] [ INFO ] [OdontologoDaoH2:106] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:16:24] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:16:24] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:24] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:25] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:16:25] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:16:25] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:25] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:25] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:16:25] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:16:25] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:25] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:25] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:16:25] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:16:25] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:16:25] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:17:15] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:17:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:17:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:17:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:87] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:100] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:17:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:17:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:17:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:17:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:17:16] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:18:20] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:18:21] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:18:21] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:18:21] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:87] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:100] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:18:21] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:18:21] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:18:21] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:18:21] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:18:21] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:20:46] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:20:47] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:20:47] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:20:47] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:20:47] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:00] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:92] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:105] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:53] Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:21:01] [ ERROR] [OdontologoDaoH2:58] Tuvimos un problema. Columna "MATRICULA" no encontrada
Column "MATRICULA" not found [42122-230]
[2024-08-09 17:22:16] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:93] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:106] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:22:17] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:34] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:31:34] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:34] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:93] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:106] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:54] Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:31:35] [ ERROR] [OdontologoDaoH2:59] Tuvimos un problema. Columna "ID" no encontrada
Column "ID" not found [42122-230]
[2024-08-09 17:41:17] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:41:18] [ INFO ] [OdontologoDaoH2:45] Odontólogo guardado: null
[2024-08-09 17:41:18] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:41:18] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:18] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:41:18] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:18] [ INFO ] [OdontologoDaoH2:87] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:41:18] [ INFO ] [OdontologoDaoH2:100] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:41:31] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:41:31] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:41:31] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:41:31] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:41:31] [ INFO ] [OdontologoDaoMemoria:31] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:41:44] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:41:44] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:44] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:41:44] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:44] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:41:44] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:44] [ INFO ] [OdontologoDaoH2:87] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:41:44] [ INFO ] [OdontologoDaoH2:100] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
[2024-08-09 17:41:44] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:41:45] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:41:45] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:41:45] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:41:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:41:45] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:06] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:42:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:42:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:42:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 7numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 8numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 9numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 10numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:42:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:42:07] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:07] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:42:08] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:42:08] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:08] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:42:08] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:42:08] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:42:08] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:44:27] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:44:28] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:44:28] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:44:28] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:44:28] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:44:28] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:44:28] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 17:44:28] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 4numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 5numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 17:45:44] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}]
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:45:45] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:45:45] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:45:45] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=75641, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:45:45] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:58] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:45:58] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:58] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:45:58] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:45:58] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:58] [ INFO ] [OdontologoDaoH2:17] Odontologo a registrar: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:45:58] [ WARN ] [OdontologoDaoH2:29] La matrícula ya está registrada.
[2024-08-09 17:45:58] [ INFO ] [OdontologoDaoH2:44] Odontólogo guardado: null
[2024-08-09 17:45:59] [ INFO ] [OdontologoDaoH2:86] Listado de todos los odontólogos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 11numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 12numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 17:45:59] [ INFO ] [OdontologoDaoH2:99] Listado de todos los odontologos: [Odontologo{Id: 1numeroMatricula=6543, nombre='Pepito', apellido='Perez'}, Odontologo{Id: 2numeroMatricula=32165, nombre='Juana', apellido='Arco'}, Odontologo{Id: 3numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 4numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 5numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 6numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 7numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 8numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 9numeroMatricula=75641, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 10numeroMatricula=98765, nombre='Manuel', apellido='Salas'}, Odontologo{Id: 11numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 12numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}]
[2024-08-09 17:46:11] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}
[2024-08-09 17:46:11] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}
[2024-08-09 17:46:11] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}
[2024-08-09 17:46:11] [ INFO ] [OdontologoDaoMemoria:25] Odontólogo guardado: Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}
[2024-08-09 17:46:11] [ INFO ] [OdontologoDaoMemoria:31] Listado de todos los odontólogos: [Odontologo{Id: 0numeroMatricula=12345, nombre='Juan', apellido='Alzate'}, Odontologo{Id: 0numeroMatricula=56789, nombre='Luis', apellido='Riofrio'}, Odontologo{Id: 0numeroMatricula=15975, nombre='Pepe', apellido='Bella'}, Odontologo{Id: 0numeroMatricula=98765, nombre='Manuel', apellido='Salas'}]
